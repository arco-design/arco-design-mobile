const fs = require('fs');
const path = require('path');

// 递归函数来遍历文件夹
function walkDir(dir, callback) {
    fs.readdirSync(dir).forEach(f => {
        let dirPath = path.join(dir, f);
        let isDirectory = fs.statSync(dirPath).isDirectory();
        isDirectory ? walkDir(dirPath, callback) : callback(path.join(dir, f));
    });
}
// 获取全部文件列表
function getFileList(dir, reg) {
    const list = [];
    walkDir(dir, function (filePath) {
        if (filePath.match(reg)) {
            list.push(filePath);
        }
    });
    return list;
}

// 获取某个目录下所有的源代码
function getCode(dir, reg) {
    const fileList = getFileList(dir, reg);

    // 目录结构
    const contents = [
        `The source code directory is ${dir}, which contains the following files`,
        ...fileList.map(i => '- ' + i),
        '\n',
    ];

    // 每个文件内容
    for (const filePath of fileList) {
        const fileContent = fs.readFileSync(filePath, { encoding: 'utf-8' }).trim();
        const fileType = path.extname(filePath).substring(1);
        contents.push(`Code for ${filePath}`, '```' + fileType, fileContent, '```', '\n');
    }
    return contents.join('\n');
}

const codes = [
    // Notify 组件
    `Notify component React source code:`,
    getCode(`packages/arcodesign/components/notify/`, /.(ts|tsx|js|jsx|less|md)$/),
    `Notify component Vue source code:`,
    getCode(`packages/arcodesign-vue/components/notify/`, /.(vue|ts|js|less|md)$/),
    // Cell 组件
    `Cell component React source code:`,
    getCode(`packages/arcodesign/components/cell/`, /.(ts|tsx|js|jsx|less|md)$/),
    `Cell component Vue source code:`,
    getCode(`packages/arcodesign-vue/components/cell/`, /.(vue|ts|js|less|md)$/),

    // Loading 组件
    `Loading component React source code:`,
    getCode(`packages/arcodesign/components/loading/`, /.(ts|tsx|js|jsx|less|md)$/),
    `Loading component Vue source code:`,
    getCode(`packages/arcodesign-vue/components/loading/`, /.(vue|ts|js|less|md)$/),
];

codes.push(`

现在需要将 Loading 组件 React 代码改写为 Vue 代码，请补全 packages/arcodesign-vue/components/loading/Loading.vue 文件，如果依赖了其他文件，也需要将该文件的内容补充

约束：
- 组件的功能和表现应与 React 代码完全一致
- vue文件要使用模版语法，因此需要转换 JSX/TSX 语法
- 代码的首行需要添加注释，内容为： "Note: Generated by AI, needs verification" 
- 生成的代码添加中英文双语注释，以助于用户更好地理解代码
- 代码风格和命名习惯需要参考 Cell 组件和 Notify 组件的源代码

`);

// 准备
const outputFile = `sites/sitemap/component loading code.txt`;
fs.mkdirSync(path.dirname(outputFile), { recursive: true });
fs.writeFileSync(outputFile, codes.join('\n'));
